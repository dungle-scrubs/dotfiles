;;
;; USEFUL LINKS
;; goku home - https://github.com/yqrashawn/GokuRakuJoudo
;; key maps - https://github.com/yqrashawn/GokuRakuJoudo/blob/master/src/karabiner_configurator/keys_info.clj
;; tutorial - https://github.com/yqrashawn/GokuRakuJoudo/blob/master/tutorial.md#advance2
;; exampmes - https://github.com/yqrashawn/GokuRakuJoudo/blob/c404d6a26775648d27716f916e7baf152cfc7132/examples.org#L205
;; advanced configuration - https://gist.github.com/gsinclair/f4ab34da53034374eb6164698a0a8ace
;; home row mod - https://github.com/Erlendms/karabiner-actions/blob/main/actions/home_row_mods-s_ct_o_c.json

{;;
 :profiles {:Default {;; 
                      ;; "default true means" rules default goes into this rule if no profiles specified
                      :default true
                      :sim     50
                      :delay   200
                      :alone   1000
                      :held    200
                      ;;
                      }}

 :devices {:voyager [{:vendor_id 12951 :product_id 6519}]}

 ;; you can create templates for running shell commands. These follow clojure string template syntax.
 :templates {:echo "echo \"%s\""
             :open "open \"%s\""
             :open-app "open -a \"%s\""}

 :simlayers {;;
             ;; simlayers work by pressing and holding the "key" and then pressing
             ;; another key within a short amount of time. as long as you hold the
             ;; "key", the layer remains active after the first combination is pressed.

             :spacebar-mode {:key :spacebar}
             :r-mode {:key :r}    ; delimeters    ( ) [ ] { } and < > 
             :e-mode {:key :e}    ; Number pad with + - BS ENTER as well
             ;; :launch-mode {:key :o}
             ;; :d-mode {:key :d}    ; arithmetic    + - * / = % < > #
             }

 ;; ---- MODIFIERS -----
 ;; !  | means mandatory
 ;; #  | means optional
 ;; CC | command
 ;; C  | left_command
 ;; TT | control
 ;; T  | left_control
 ;; OO | option
 ;; O  | left_option
 ;; SS | shift
 ;; S  | left_shift
 ;; F  | fn
 ;; Q  | right_command
 ;; W  | right_control
 ;; E  | right_option
 ;; R  | right_shift
 ;; P  | caps_lock
 ;; !! | mandatory command + control + optional + shift (hyper)
 ;; ## | optional any

 ;; ---- RULE STRUCTURE ----
 ;; rule [:period ["period-mode" 1] nil {:afterup ["period-mode" 0] :alone :period}]
 ;;       |_____| |_______________| |_| |_________________________________________|
 ;;        <from>    <to>      <conditions>         <other options>

 :main [;;
        {;;
         :des "CAPSLOCK is CTRL if pressed in combination, otherwise ESC"
         :rules  [[:##caps_lock :left_control nil {:alone :escape}]]}

        {;;
         :des "TAB is meh if pressed in combination, otherwise TAB"
         :rules  [[:##tab :!Tleft_shift nil {:alone :tab}]]}

        {;;
         :des "CTRL + y is backspace"
         :rules  [[:!Ty :delete_or_backspace]]}

        {;;
         :des "home row mods"
         :rules [;;
                 ;; j, k, k, and ; are modified to work with v-mode, r-mode, and spacebar-mode
                 ;;
                 ;; A S D F
                 ;; ⇧ ⌃ ⌥ ⌘
                 [:condi :!voyager]
                 [[:a :s :d :f] nil nil {:held :!CTOleft_shift}]
                 [[:a :s :d] nil nil {:held :!TOleft_shift}]
                 [[:a :d :f] nil nil {:held :!COleft_shift}]
                 [[:s :d :f] nil nil {:held :!COleft_control}]
                 [[:a :s :f] nil nil {:held :!Cleft_shift}]
                 [{:sim [:a :s] :simo {:dorder :strict}} nil nil {:held :!Tleft_shift :alone [:a :s]}]
                 [{:sim [:s :a] :simo {:dorder :strict}} nil nil {:held :!Tleft_shift :alone [:s :a]}]
                 [{:sim [:a :d] :simo {:dorder :strict}} nil nil {:held :!Oleft_shift :alone [:a :d]}]
                 [{:sim [:d :a] :simo {:dorder :strict}} nil nil {:held :!Oleft_shift :alone [:d :a]}]
                 [{:sim [:a :f] :simo {:dorder :strict}} nil nil {:held :!Cleft_shift :alone [:a :f]}]
                 [{:sim [:f :a] :simo {:dorder :strict}} nil nil {:held :!Cleft_shift :alone [:f :a]}]
                 [{:sim [:s :d] :simo {:dorder :strict}} nil nil {:held :!Oleft_control :alone [:s :d]}]
                 [{:sim [:d :s] :simo {:dorder :strict}} nil nil {:held :!Oleft_control :alone [:d :s]}]
                 [{:sim [:s :f] :simo {:dorder :strict}} nil nil {:held :!Cleft_control :alone [:s :f]}]
                 [{:sim [:f :s] :simo {:dorder :strict}} nil nil {:held :!Cleft_control :alone [:f :s]}]
                 [{:sim [:d :f] :simo {:dorder :strict}} nil nil {:held :!Cleft_option :alone [:d :f]}]
                 [{:sim [:f :d] :simo {:dorder :strict}} nil nil {:held :!Cleft_option :alone [:f :d]}]
                 [:a nil nil {:held {:key :left_shift :halt true} :alone {:key :a :halt true} :delayed {:invoked :vk_none :canceled {:key :a :halt true}}}]
                 [:s nil nil {:held {:key :left_control :halt true} :alone {:key :s :halt true} :delayed {:invoked :vk_none :canceled {:key :s :halt true}}}]
                 [:d nil nil {:held {:key :left_option :halt true} :alone {:key :d :halt true} :delayed {:invoked :vk_none :canceled {:key :d :halt true}}}]
                 [:f nil nil {:held {:key :left_command :halt true} :alone {:key :f :halt true} :delayed {:invoked :vk_none :canceled {:key :f :halt true}}}]

                 ;; J K L ;
                 ;; ⌘ ⌥ ⌃ ⇧
                 [[:j :k :l :semicolon] nil nil {:held :!QTEright_shift}]
                 [[:k :l :semicolon] nil nil {:held :!WEright_shift}]
                 [[:j :k :semicolon] nil nil {:held :!QEright_shift}]
                 [[:j :l :semicolon] nil nil {:held :!QWright_shift}]
                 [[:l :k :j] nil nil {:held :!QEright_control}]
                 [{:sim [:semicolon :l] :simo {:dorder :strict}} nil nil {:held :!Wright_shift :alone [:semicolon :l]}]
                 [{:sim [:l :semicolon] :simo {:dorder :strict}} nil nil {:held :!Wright_shift :alone [:l :semicolon]}]
                 [{:sim [:semicolon :k] :simo {:dorder :strict}} nil nil {:held :!Eright_shift :alone [:semicolon :k]}]
                 [{:sim [:k :semicolon] :simo {:dorder :strict}} nil nil {:held :!Eright_shift :alone [:k :semicolon]}]
                 [{:sim [:semicolon :j] :simo {:dorder :strict}} nil nil {:held :!Qright_shift :alone [:semicolon :j]}]
                 [{:sim [:j :semicolon] :simo {:dorder :strict}} nil nil {:held :!Qright_shift :alone [:j :semicolon]}]
                 [{:sim [:l :k] :simo {:dorder :strict}} nil nil {:held :!Wright_control :alone [:l :k]}]
                 [{:sim [:k :l] :simo {:dorder :strict}} nil nil {:held :!Wright_control :alone [:k :l]}]
                 [{:sim [:l :j] :simo {:dorder :strict}} nil nil {:held :!Qright_control :alone [:l :j]}]
                 [{:sim [:j :l] :simo {:dorder :strict}} nil nil {:held :!Qright_control :alone [:j :l]}]
                 [{:sim [:k :j] :simo {:dorder :strict}} nil nil {:held :!Qright_option :alone [:k :j]}]
                 [{:sim [:j :k] :simo {:dorder :strict}} nil nil {:held :!Qright_option :alone [:j :k]}]
                 [:j nil [:!spacebar-mode :!e-mode :!r-mode] {:held {:key :right_command :halt true} :alone {:key :j :halt true} :delayed {:invoked :vk_none :canceled {:key :j :halt true}}}]
                 [:k nil [:!spacebar-mode :!e-mode :!r-mode] {:held {:key :right_option :halt true} :alone {:key :k :halt true} :delayed {:invoked :vk_none :canceled {:key :k :halt true}}}]
                 [:l nil [:!spacebar-mode :!e-mode :!r-mode] {:held {:key :right_control :halt true} :alone {:key :l :halt true} :delayed {:invoked :vk_none :canceled {:key :l :halt true}}}]
                 [:semicolon nil [:!spacebar-mode :!e-mode :!r-mode] {:held {:key :right_shift :halt true} :alone {:key :semicolon :halt true} :delayed {:invoked :vk_none :canceled {:key :semicolon :halt true}}}]
                 ;;
                 ]}

        {;;
         :des "Control + any number for specific Yabai space"
         :rules  [;;
                  [:!CC1 "/opt/homebrew/bin/yabai -m space --focus 1"]
                  [:!CC2 "/opt/homebrew/bin/yabai -m space --focus 2"]
                  [:!CC3 "/opt/homebrew/bin/yabai -m space --focus 3"]
                  [:!CC4 "/opt/homebrew/bin/yabai -m space --focus 4"]
                  [:!CC5 "/opt/homebrew/bin/yabai -m space --focus 5"]
                  [:!CC6 "/opt/homebrew/bin/yabai -m space --focus 6"]
                  [:!CC7 "/opt/homebrew/bin/yabai -m space --focus 7"]
                  [:!CC2 "/opt/homebrew/bin/yabai -m space --fcus 8"]
                  [:!CC9 "/opt/homebrew/bin/yabai -m space --focus 9"]
                  [:!CC0 "/opt/homebrew/bin/yabai -m space --focus 10"]
                  ;;
                  ]}

        {;;
         :des "spacebar-mode for navigation"
         :condi :!voyager
         :rules [;;
                 :condi :!voyager
                 :spacebar-mode
                 [:##1 "/opt/homebrew/bin/yabai -m space --focus 1"]
                 [:##2 "/opt/homebrew/bin/yabai -m space --focus 2"]
                 [:##3 "/opt/homebrew/bin/yabai -m space --focus 3"]
                 [:##4 "/opt/homebrew/bin/yabai -m space --focus 4"]
                 [:##5 "/opt/homebrew/bin/yabai -m space --focus 5"]
                 [:##6 "/opt/homebrew/bin/yabai -m space --focus 6"]
                 [:##7 "/opt/homebrew/bin/yabai -m space --focus 7"]
                 [:##8 "/opt/homebrew/bin/yabai -m space --focus 8"]
                 [:##9 "/opt/homebrew/bin/yabai -m space --focus 9"]
                 [:##0 "/opt/homebrew/bin/yabai -m space --focus 10"]
                 [:##y "/opt/homebrew/bin/yabai -m space --focus prev"]
                 [:##o "/opt/homebrew/bin/yabai -m space --focus next"]
                 [:##h :left_arrow]
                 [:##j :down_arrow]
                 [:##k :up_arrow]
                 [:##l :right_arrow]
                 [:##n :!Cn]
                 ;;
                 ]}

        {;;
         :des "middle mouse for navigation"
         :rules [;;
                 [:!C0 "/opt/homebrew/bin/yabai -m space --focus 0"]
                 [:!C1 "/opt/homebrew/bin/yabai -m space --focus 1"]
                 [:!C2 "/opt/homebrew/bin/yabai -m space --focus 2"]
                 [:!C3 "/opt/homebrew/bin/yabai -m space --focus 3"]
                 [:!C4 "/opt/homebrew/bin/yabai -m space --focus 4"]
                 [:!C5 "/opt/homebrew/bin/yabai -m space --focus 5"]
                 [:!C6 "/opt/homebrew/bin/yabai -m space --focus 6"]
                 [:!C7 "/opt/homebrew/bin/yabai -m space --focus 7"]
                 [:!C8 "/opt/homebrew/bin/yabai -m space --focus 8"]
                 [:!C9 "/opt/homebrew/bin/yabai -m space --focus 9"]
                 ;;
                 ]}

        {;;
         ;; r  |  ^ $ * & + #
         ;;    |  @ ( { } ) |
         ;;    |  % [ ] < > \
         :des "r-mode for delimeters"
         :rules [;;
                 :condi :!voyager
                 :r-mode
                 [:##y :!S6]
                 [:##u :!S4]
                 [:##i :!S8]
                 [:##o :!S7]
                 [:##p :!Sequal_sign]
                 [:##open_bracket :!S3]
                 [:##h :!S2]
                 [:##j :!S9]
                 [:##k :!Sopen_bracket]
                 [:##l :!Sclose_bracket]
                 [:##semicolon :!S0]
                 [:##quote :!Sbackslash]
                 [:##n :!S5]
                 [:##m :open_bracket]
                 [:##comma :close_bracket]
                 [:##period :!S1]
                 [:##slash :equal_sign]
                 ;;
                 ]}

        {;;
         ;; e  |  ⇦ 7 8 9 +
         ;;    |  . 4 5 6 - ↲ 
         ;;    |  0 1 2 3 ↲
         :des "e-mode for number pad"
         :rules [;; e
                 :condi :!voyager
                 :e-mode
                 [:u :7]
                 [:i :8]
                 [:o :9]
                 [:j :4]
                 [:k :5]
                 [:l :6]
                 [:m :1]
                 [:comma :2]
                 [:period :3]
                 [:p :!Sequal_sign]
                 [:semicolon :hyphen]
                 [:slash :return_or_enter]
                 [:quote :return_or_enter]
                 [:y :delete_or_backspace]
                 [:h :period]
                 [:n :0]
                 ;; e
                 ]}

        ;; {;;
        ;;  :des "launch mode: quick launch applications"
        ;;  :rules [:launch-mode                                      ; when open-mode is active (o is held)
        ;;          [:t [:open-app "terminal"]]                   ; and t is pressed, open Terminal
        ;;          [:f [:open-app "finder"]]                     ; and f is pressed, open Finder
        ;;          [:e "/bin/bash -c 'printenv > ~/Desktop/karabiner_env.txt'"]                     ; and f is pressed, open Finder
        ;;          ]}
        ]
 ;; 
 }
